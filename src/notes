
Should Actor mode be a Parameter or an Input?

Example SID for commanding Actor:
"Actor.Mode=Targeting;"
"Actor.Track{Target=RedBuoy,Dir=Ahead/Forward?,KeepHeading=true,ApproachSpeed=40%}"
"Actor.Move=Heading:204,Depth:5,Surge:40,Sway:0;"
or
"Actor.Track.Target=RedBuoy;"

Module.DataType.Name
or
DataType.Module.Name
?

New stuff is same as old stuff but uses QMap<QString, QVariant> instead of custom structs.
Messages contain QMaps or SIDs. Does SID need a new name?

New datatype: 
simple 
data 
database
hierarchial
flexible
modular
timestamped

signed?

// for multiple values
struct SIDs {
	QStringList ID;
	QMap<QString, QVariant> Data;
	QMap<QString, QTime> Timestamps;
};
// for one value
struct SID {
	QStringList ID;
	QVariant Data;
	QTime timestamp;
}

can a sensorValue fit in a QVariant?
maybe?

metadata we could use:
ID/Name // obviously
source // user/sensor/output/state
data type // data/param/mode/command
timestamp
availability // defaults to unavailable w/other fields missing when ID created by lookup/access


need: custom TreeItem type with above data and functions for checking them
and functions for serializing an item and all children

QMap<QString, QMap<QString, QVariant>> sourceMeta; // sourceID, metaKey, value




State
Position+Orientation
Motion

Position:
Depth

Orientation:
Roll
Pitch
Heading

Motion:
XSpeed
YSpeed
ZSpeed

Motion:
RollRate
PitchRate
YawRate

AUV.Actuators.Thrusters.Left
AUV.Actuators.Mechanisms.DropO/X
AUV.Sensors.OS5000.Heading
AUV.Sensors.OS5000.Accel.Y
AUV.Sensors.Depth
AUV.Position.Depth 
AUV.Motion.Velocity.X
AUV.Motion.Accel.Y
AUV.Sys.Power.MainVoltage
AUV.Sys.EnvBrightness
AUV.Mode // autonomous, rc, off
AUV.Mode.RC // direct, deadReckoning, tracking
AUV.Mode.Autonomous // deadReckoning, tracking
AUV.Command // direct, dR, tracking, hold, surface


Message Signals/Message handlers take care of synchronous data transfer
Hub keeps track of data for asynchronous access
Low-Latency, but no need for redundant copies
